<?xml version="1.0" encoding="UTF-8"?>
<!-- spring bean容器 -->
<beans xmlns="http://www.springframework.org/schema/beans"    
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"    
    xmlns:p="http://www.springframework.org/schema/p"    
    xmlns:mvc="http://www.springframework.org/schema/mvc"    
    xmlns:context="http://www.springframework.org/schema/context"    
    xmlns:util="http://www.springframework.org/schema/util"    
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd    
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd    
            http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd    
            http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.3.xsd"> 

	 <!-- 对web包中的所有类进行扫描，以完成Bean创建和自动依赖注入的功能 -->
    <context:component-scan base-package="com.exam.controller"/>
	
	<!--支持spring3.0+ 新的mvc注解,不加有些注解功能不行，如json转换的@ResponseBody 
         <context:annotation-config/> 
		      将隐式地向 Spring 容器注册
		1. AutowiredAnnotationBeanPostProcessor
		2. CommonAnnotationBeanPostProcessor
		3. PersistenceAnnotationBeanPostProcessor
		4. RequiredAnnotationBeanPostProcessor 
		     这 4 个 BeanPostProcessor。
	-->
	<mvc:annotation-driven enable-matrix-variables="true">
		<mvc:async-support default-timeout="10"/><!-- 子元素可指定异步拦截器 -->
	</mvc:annotation-driven>
	
	
	<!-- 将所静态资源的请求交给web服务器默认的Servlet来处理，而不是让springmvc的核心控制器：DispatcherServlet
		对于不同的web服务器的默认Servlet名称是不同，tomcat的默认Servlet名称为"default"
	 -->
	<mvc:default-servlet-handler />
	
	
	<!--对模型视图名称的解析，即在模型视图名称添加前后缀 
		 p:prefix="/views/" p:suffix=".jsp"
		 视图解析器，其作用会Controller方法返回的字符串解析为对应的视图名:prefix + string + suffix
		 例如Controller方法返回的字符串为"success": /views/success.jsp
	-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/views/"/>
        <property name="suffix" value=".jsp"/>
         <!-- 如果使用jstl的话，配置下面的属性 -->
    	<property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
    </bean>
	
	<!-- 当请求的内容类型为：multipart/form-data 表示文件上传的请求头 -->
	<bean id="multipartResolver" 
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxInMemorySize" value="10240"/>
		<property name="uploadTempDir" value="/upload/"/>
		<property name="maxUploadSize" value="-1"/>
	</bean>
	
	
	
</beans>	